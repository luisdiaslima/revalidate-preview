import { GetStaticProps } from 'next';
import Head from 'next/head'
import Link from 'next/link'
import Image from 'next/image'
import styles from '../styles/Home.module.css'
import api from './api';
import { useWishList } from '../hooks/wishList';


interface ProductData {
  id: string;
  title: string;
  available_ecommerce: boolean;
  summary?: string;
  image: {
    thumbnail: string;
  }
  discount_price: string;
}

export default function Home({ products }: { products: ProductData[] }) {
  const { addToWishList } = useWishList()
  return (
    <div className={styles.container}>
      <Head>
        <title>Create Next App</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <main className={styles.main}>
        <h1 className={styles.title}>
          E-commerce <Link href="/">Pedido Pago</Link>
        </h1>

        <p className={styles.description}>
          Listagem de produtos
        </p>

        <div className={styles.grid}>
          {products.map((product) => (
            <div key={product.id} className={styles.card}>
              <h2>{product.title} &rarr;</h2>
              <Link href={`/produto/${product.id}`} >
                <img src={product.image.thumbnail} width={100} height={100} placeholder="blur" />
              </Link>
              <p> {product?.discount_price}
                <button onClick={() => addToWishList(product)} >Adicionar a lista de desejos</button>
              </p>
            </div>
          ))}
        </div>
      </main>

      <footer className={styles.footer}>
        <a
          href="https://vercel.com?utm_source=create-next-app&utm_medium=default-template&utm_campaign=create-next-app"
          target="_blank"
          rel="noopener noreferrer"
        >
          Powered by{' '}
          <span className={styles.logo}>
            <Image src="/vercel.svg" alt="Vercel Logo" width={72} height={16} />
          </span>
        </a>
      </footer>
    </div>
  )
}

interface Page {
  items: Array<{ name: string, products: Array<any> }>;
}

export const getStaticProps: GetStaticProps = async () => {
  const { REACT_APP_DOMAIN, X_SERVERLESS_TOKEN } = process.env;

  const serverlessToken = X_SERVERLESS_TOKEN || '';

  const configStore = serverlessToken ? {
    headers: {
      'X-Serverless-Token': serverlessToken,
    },
  } : {};

  const response = await api.get(`/v2/store/info?domain=${REACT_APP_DOMAIN}`, configStore);

  const config = {
    headers: { Authorization: `Bearer ${response?.data?.session_jwt}`, 'X-Serverless-Token': X_SERVERLESS_TOKEN || '' },
  };

  const { data } = await api.get<Page>('/v2/page/home', config);

  return {
    props: {
      products: data.items[0].products,
    },
    revalidate: 60,
  };
}
