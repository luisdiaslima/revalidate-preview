import { GetStaticPaths, GetStaticProps } from "next";
import Head from "next/head";
import Image from 'next/image'
import Link from 'next/link'
import api from "../api";

import styles from '../../styles/Home.module.css'


interface ProductData {
  items: Array<{
    id: string;
    title: string;
    available_ecommerce: boolean;
  }>;
}

interface ProductItem {
  id: string;
  title: string;
  medias: Array<{ thumbnail: string }>;
  discount_price: string;
}


export const getStaticPaths: GetStaticPaths = async () => {
  const { REACT_APP_DOMAIN, X_SERVERLESS_TOKEN } = process.env;
  const configStore = X_SERVERLESS_TOKEN ? {
    headers: {
      'X-Serverless-Token': X_SERVERLESS_TOKEN && X_SERVERLESS_TOKEN,
    },
  } : {};

  const response = await api.get(`/v2/store/info?domain=${REACT_APP_DOMAIN}`, configStore);

  const config = {
    headers: { Authorization: `Bearer ${response?.data?.session_jwt}`, 'X-Serverless-Token': X_SERVERLESS_TOKEN || '' },
  };

  const { data } = await api.get<ProductData>('/v2/products', config);

  const available_products = data.items.filter((item: { available_ecommerce: any; }) => item?.available_ecommerce);

  const paths = available_products.map((product) => ({
    params: {
      id: product.id,
    },
  }));

  return {
    paths: paths || [],
    fallback: true,
  };
};

export const getStaticProps: GetStaticProps = async (context) => {
  const { params } = context;

  const { REACT_APP_DOMAIN, X_SERVERLESS_TOKEN } = process.env;
  const configStore = X_SERVERLESS_TOKEN ? {
    headers: {
      'X-Serverless-Token': X_SERVERLESS_TOKEN && X_SERVERLESS_TOKEN,
    },
  } : {};

  const response = await api.get(`/v2/store/info?domain=${REACT_APP_DOMAIN}`, configStore);

  const config = {
    headers: { Authorization: `Bearer ${response?.data?.session_jwt}`, 'X-Serverless-Token': X_SERVERLESS_TOKEN || '' },
  };

  const product = await api.get(`/v2/product/${params?.id}/e-commerce`, config);

  return {
    props: {
      product: product.data,
    },
    revalidate: 1000
  }
};

const ProductPage = ({ product }: { product: ProductItem }) => {
  return (
    <div className={styles.container}>
      <Head>
        <title>Create Next App</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <main className={styles.main}>
        <h1 className={styles.title}>
          E-commerce <Link href="/">Pedido Pago</Link>
        </h1>

        <p className={styles.description}>
          Produto estático único
        </p>

        <div className={styles.grid} style={{ width: 500 }}>
          <div className={styles.card} style={{ width: '100%' }}>
            <h2>{product?.title} &rarr;</h2>
            <img src={product?.medias?.length ? product?.medias[0]?.thumbnail : ''} width={100} height={100} placeholder="blur" />
            <p>{product?.discount_price}</p>
          </div>
        </div>
      </main>

      <footer className={styles.footer}>
        <a
          href="https://vercel.com?utm_source=create-next-app&utm_medium=default-template&utm_campaign=create-next-app"
          target="_blank"
          rel="noopener noreferrer"
        >
          Powered by{' '}
          <span className={styles.logo}>
            <Image src="/vercel.svg" alt="Vercel Logo" width={72} height={16} />
          </span>
        </a>
      </footer>
    </div>
  )
}


export default ProductPage;